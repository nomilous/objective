// Generated by CoffeeScript 1.9.2
var fs, run, uplink;

fs = require('fs');

uplink = require('../uplink');

module.exports = run = {
  "do": function(program, callback) {
    var coffee, e, file, js, mod, name, objective;
    file = program.file || 'objective';
    if (!(file.match(/.coffee$/) || file.match(/.js$/))) {
      ['.js', '.coffee'].forEach(function(ext) {
        var stats;
        try {
          stats = fs.lstatSync(file + ext);
          if (!stats.isDirectory()) {
            return file = file + ext;
          }
        } catch (_error) {}
      });
    }
    try {
      console.log('loading objective from ' + file);
      js = fs.readFileSync(file).toString();
      if (file.match(/.coffee$/)) {
        coffee = require('coffee-script');
        js = coffee.compile(js, {
          bare: true
        });
      } else {
        js = '(' + js + ')';
      }
      objective = eval(js);
      if (objective.module != null) {
        mod = require(objective.module);
        name = objective.module.replace(/^objective-/, '');
        console.log("loading module " + objective.module + " as " + name);
        eval("var " + name + " = mod;");
      }
      return uplink.connect(objective, function(err) {
        if (err != null) {
          console.log(err.toString());
          process.exit(1);
        }
        return objective.root(function() {});
      });
    } catch (_error) {
      e = _error;
      console.log(e);
      return callback();
    }
  }
};

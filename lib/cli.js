// Generated by CoffeeScript 1.9.2
var e, file, i, len, lstatSync, program, readFileSync, ref, ref1;

ref = require('fs'), lstatSync = ref.lstatSync, readFileSync = ref.readFileSync;

module.exports = program = require('commander');

program.stop = false;

program.version(JSON.parse(require('fs').readFileSync(__dirname + '/../package.json')).version).option('--create', 'Create new objective.').option('--file [file]', 'Run objective from file. (name part)').option('--register', 'Register new user.').option('--reset', 'Re-register as existing user by email (forgot password).').option('--create-dev', 'Create new dev objective.').option('--template [name]', 'Create new objective from template').option('--private', 'To create objective as private.').option('--force', 'Force action.').option('--js', 'Use javascript for --create.').option('--recurse [dir]', 'Recurse directory for child objectives.').option('--run', 'Run child objectives. (from --recurse)').option('--prompt', 'Proceed to prompt, skipping run').option('--offline', 'Run offline.').parse(process.argv);

if (program.register) {
  program.stop = true;
  return require('./actions/register')["do"](program, false, function() {});
}

if (program.reset) {
  program.stop = true;
  return require('./actions/register')["do"](program, true, function() {});
}

program.template || (program.template = 'default');

if (program.create) {
  program.stop = true;
  return require('./actions/create')["do"](program, program.template, function() {});
}

if (program.createDev) {
  program.stop = true;
  return require('./actions/create')["do"](program, 'dev', function() {});
}

if (objective.root == null) {
  require('coffee-script').register();
  if (program.file != null) {
    console.log("Loading '" + program.file + "'");
    try {
      if (program.file[0] !== '/') {
        program.file = process.cwd() + '/' + program.file;
      }
      require(program.file);
      return;
    } catch (_error) {
      e = _error;
      return console.log(e.stack);
    }
  }
  ref1 = ['./objective.coffee', './objective.js'];
  for (i = 0, len = ref1.length; i < len; i++) {
    file = ref1[i];
    try {
      lstatSync(file);
      console.log("Loading '" + file + "'");
      try {
        require(process.cwd() + '/' + file);
        return;
      } catch (_error) {
        e = _error;
        return console.log(e.stack);
      }
    } catch (_error) {}
  }
  console.log('\nNothing to do.');
  process.exit(1);
}

// Generated by CoffeeScript 1.9.2
var Pipeline, deferred, pipeline, ref;

ref = require('also'), pipeline = ref.pipeline, deferred = ref.deferred;

module.exports = Pipeline = {
  pipes: {},
  createEvent: function(event) {
    var base;
    return (base = Pipeline.pipes)[event] || (base[event] = []);
  },
  emit: function(event, payload, callback) {
    var fn, pipe;
    if (!(pipe = Pipeline.pipes[event])) {
      return callback(new Error("No handlers for '" + event + "'."));
    }
    return pipeline((function() {
      var i, len, results;
      results = [];
      for (i = 0, len = pipe.length; i < len; i++) {
        fn = pipe[i];
        results.push((function(fn) {
          return deferred(function(action) {
            return fn(payload, action.resolve);
          });
        })(fn));
      }
      return results;
    })()).then(function(result) {
      return callback(null, payload);
    }, function(error) {
      return callback(error);
    }, function(notify) {});
  },
  on: function(event, fn) {
    var base;
    (base = Pipeline.pipes)[event] || (base[event] = []);
    return Pipeline.pipes[event].push(fn);
  }
};
